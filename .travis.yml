sudo: required
dist: trusty
language: python
cache:
  directories:
    - $HOME/.theano
matrix:
    include:
        - python: 3.6
          env: KERAS_BACKEND=tensorflow TEST_MODE=PEP8_DOC
        - python: 2.7
          env: KERAS_BACKEND=tensorflow
        - python: 3.6
          env: KERAS_BACKEND=tensorflow
        - python: 2.7
          env: KERAS_BACKEND=theano THEANO_FLAGS=optimizer=fast_compile
        - python: 3.6
          env: KERAS_BACKEND=theano THEANO_FLAGS=optimizer=fast_compile
        # - python: 2.7
        #   env: KERAS_BACKEND=cntk PYTHONWARNINGS=ignore
        # - python: 3.6
        #   env: KERAS_BACKEND=cntk PYTHONWARNINGS=ignore
install:
  # code below is taken from http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  - travis_retry conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment
  - travis_retry pip install --only-binary=numpy,scipy,pandas numpy nose scipy h5py theano pytest pytest-pep8 pandas --progress-bar off
  - pip install git+https://github.com/keras-team/keras.git --progress-bar off

  # set library path
  - export LD_LIBRARY_PATH=$HOME/miniconda/envs/test-environment/lib/:$LD_LIBRARY_PATH

  - if [[ "$KERAS_BACKEND" == "theano" ]]; then
      travis_retry conda install -q mkl mkl-service;
    fi

  - pip install -e .[tests] --progress-bar off

  # install TensorFlow (CPU version).
  - pip install tensorflow==1.9 --progress-bar off

  # install cntk
  - ./.travis/install_cntk.sh

  # Remove the current backend from the coverage exclusion.
  - sed -i "\/keras\/backend\/${KERAS_BACKEND}_backend.py/d" .coveragerc

  # detect whether core files are changed or not
  - export CORE_CHANGED=False;
  - for entry in `git diff --name-only HEAD~1`; do if [[ "$entry" == "keras/backend/"* ]] || [[ "$entry" == "keras/engine/"* ]] || [[ "$entry" == "keras/layers/"* ]]; then export CORE_CHANGED=True; fi; done
  - export APP_CHANGED=False;
  - for entry in `git diff --name-only HEAD~1`; do if [[ "$entry" == "keras/applications/"* ]]; then export APP_CHANGED=True; fi; done


# command to run tests
script:
  - export MKL_THREADING_LAYER="GNU"
  # run keras backend init to initialize backend config
  - python -c "import keras.backend"
  # create dataset directory to avoid concurrent directory creation at runtime
  - mkdir ~/.keras/datasets
  # set up keras backend
  - sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$KERAS_BACKEND'/g' ~/.keras/keras.json;
  - echo -e "Running tests with the following config:\n$(cat ~/.keras/keras.json)"
  - if [[ "$TEST_MODE" == "PEP8_DOC" ]]; then
      PYTHONPATH=$PWD:$PYTHONPATH py.test --pep8 -m pep8 -n0 && py.test tests/test_documentation.py;
    else
      PYTHONPATH=$PWD:$PYTHONPATH py.test tests/ --cov-config .coveragerc --cov=keras_contrib tests/;
    fi
